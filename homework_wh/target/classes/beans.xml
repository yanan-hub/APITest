<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-config="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 扫描service -->
    <!-- 这个下面的所有类就是目标对象 -->
    <context:component-scan base-package="cn.bgs.service"></context:component-scan>

    <!-- 读取外部配置文件 -->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!-- 装配数据源 -->
    <!-- 装配数据源(alibaba) -->
    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close">
        <!-- 数据库基本信息配置 -->
        <property name = "url" value = "${jdbc.url}" />
        <property name = "username" value = "${jdbc.username}" />
        <property name = "password" value = "${jdbc.password}" />
        <property name = "driverClassName" value = "${jdbc.driverClassName}" />
        <property name = "filters" value = "${jdbc.filters}" />
        <!-- 最大并发连接数 -->
        <property name = "maxActive" value = "${jdbc.maxActive}" />
        <!-- 初始化连接数量 -->
        <property name = "initialSize" value = "${jdbc.initialSize}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name = "maxWait" value = "${jdbc.maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name = "minIdle" value = "${jdbc.minIdle}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name = "timeBetweenEvictionRunsMillis" value ="${jdbc.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name = "minEvictableIdleTimeMillis" value ="${jdbc.minEvictableIdleTimeMillis}" />
        <property name = "validationQuery" value = "${jdbc.validationQuery}" />
        <property name = "testWhileIdle" value = "${jdbc.testWhileIdle}" />
        <property name = "testOnBorrow" value = "${jdbc.testOnBorrow}" />
        <property name = "testOnReturn" value = "${jdbc.testOnReturn}" />
        <property name = "maxOpenPreparedStatements" value ="${jdbc.maxOpenPreparedStatements}" />
        <!-- 打开 removeAbandoned 功能 -->
        <property name = "removeAbandoned" value = "${jdbc.removeAbandoned}" />
        <!-- 1800 秒，也就是 30 分钟 -->
        <property name = "removeAbandonedTimeout" value ="${jdbc.removeAbandonedTimeout}" />
        <!-- 关闭 abanded 连接时输出错误日志 -->
        <property name = "logAbandoned" value = "${jdbc.logAbandoned}" />
    </bean>

    <!-- 配置事务 -->
    <!--
    	使用aop的原理:
    		确定目标对象
    		确定通知类
    		在配置切面编程
     -->
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 管理数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 通知我们使用spring提供的通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 统配扫描 -->
            <tx:method name="add*"/>
            <tx:method name="update*"/>
            <tx:method name="delete*"/>
            <tx:method name="*" propagation="REQUIRED" read-only="false" isolation="REPEATABLE_READ"/>
        </tx:attributes>
    </tx:advice>

    <!-- 使用aop配置切面编程,对事务控制 -->
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* cn.bgs.service.impl.*.*(..))" id="*"/>

        <!-- 切面 = 通知 + 切入点 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="*"/>
    </aop:config>

    <!-- 装配sqlSessionFactory工厂 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加入数据源 -->
        <property name="dataSource" ref="dataSource"></property>

        <!-- 读取mybatis核心配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

        <!-- 读取mapper.xml -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 批量匹配mapper接口 -->
    <mybatis-config:scan base-package="cn.bgs.mapper"></mybatis-config:scan>
</beans>